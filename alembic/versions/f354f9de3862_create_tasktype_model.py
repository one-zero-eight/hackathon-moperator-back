"""create tasktype model

Revision ID: f354f9de3862
Revises: 1d9f0d3324d1
Create Date: 2023-11-18 17:05:17.011641

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = "f354f9de3862"
down_revision: Union[str, None] = "1d9f0d3324d1"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "task_types",
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )

    op.alter_column("machines", "type", existing_type=sa.VARCHAR(), nullable=True)
    op.add_column("task_suitable_agregates", sa.Column("task_type_id", sa.Integer(), nullable=False))
    op.drop_constraint("task_suitable_agregates_task_id_fkey", "task_suitable_agregates", type_="foreignkey")
    op.create_foreign_key(None, "task_suitable_agregates", "task_types", ["task_type_id"], ["id"])
    op.drop_column("task_suitable_agregates", "task_id")
    op.add_column("task_suitable_machines", sa.Column("task_type_id", sa.Integer(), nullable=False))
    op.drop_constraint("task_suitable_machines_task_id_fkey", "task_suitable_machines", type_="foreignkey")
    op.create_foreign_key(None, "task_suitable_machines", "task_types", ["task_type_id"], ["id"])
    op.drop_column("task_suitable_machines", "task_id")
    op.add_column("tasks", sa.Column("type_id", sa.Integer(), nullable=False))
    op.create_foreign_key(None, "tasks", "task_types", ["type_id"], ["id"])
    op.drop_column("tasks", "type")
    op.drop_column("tasks", "description")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("tasks", sa.Column("description", sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column("tasks", sa.Column("type", sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, "tasks", type_="foreignkey")
    op.drop_column("tasks", "type_id")
    op.add_column("task_suitable_machines", sa.Column("task_id", sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, "task_suitable_machines", type_="foreignkey")
    op.create_foreign_key("task_suitable_machines_task_id_fkey", "task_suitable_machines", "tasks", ["task_id"], ["id"])
    op.drop_column("task_suitable_machines", "task_type_id")
    op.add_column("task_suitable_agregates", sa.Column("task_id", sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, "task_suitable_agregates", type_="foreignkey")
    op.create_foreign_key(
        "task_suitable_agregates_task_id_fkey", "task_suitable_agregates", "tasks", ["task_id"], ["id"]
    )
    op.drop_column("task_suitable_agregates", "task_type_id")
    op.alter_column("machines", "type", existing_type=sa.VARCHAR(), nullable=False)
    op.drop_table("task_types")
    # ### end Alembic commands ###
