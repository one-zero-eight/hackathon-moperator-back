"""add tasks, machine, agregates 2

Revision ID: 6796b6a34214
Revises: 59d94a7aad8e
Create Date: 2023-11-18 07:32:11.675779

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "6796b6a34214"
down_revision: Union[str, None] = "59d94a7aad8e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("task_agregate")
    op.drop_table("task_machine")
    op.add_column("tasks", sa.Column("current_machine_id", sa.Integer(), nullable=True))
    op.add_column("tasks", sa.Column("current_agregate_id", sa.Integer(), nullable=True))
    op.create_foreign_key(None, "tasks", "agregates", ["current_agregate_id"], ["id"])
    op.create_foreign_key(None, "tasks", "machines", ["current_machine_id"], ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "tasks", type_="foreignkey")
    op.drop_constraint(None, "tasks", type_="foreignkey")
    op.drop_column("tasks", "current_agregate_id")
    op.drop_column("tasks", "current_machine_id")
    op.create_table(
        "task_machine",
        sa.Column("task_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("machine_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(["machine_id"], ["machines.id"], name="task_machine_machine_id_fkey"),
        sa.ForeignKeyConstraint(["task_id"], ["tasks.id"], name="task_machine_task_id_fkey"),
        sa.PrimaryKeyConstraint("task_id", "machine_id", name="task_machine_pkey"),
    )
    op.create_table(
        "task_agregate",
        sa.Column("task_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("agregate_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(["agregate_id"], ["agregates.id"], name="task_agregate_agregate_id_fkey"),
        sa.ForeignKeyConstraint(["task_id"], ["tasks.id"], name="task_agregate_task_id_fkey"),
        sa.PrimaryKeyConstraint("task_id", "agregate_id", name="task_agregate_pkey"),
    )
    # ### end Alembic commands ###
