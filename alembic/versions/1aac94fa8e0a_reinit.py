"""reinit

Revision ID: 1aac94fa8e0a
Revises:
Create Date: 2023-11-18 18:52:10.127626

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "1aac94fa8e0a"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "agregates",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column(
            "status", sa.Enum("free", "busy", "broken", name="agregatestatus"), server_default="free", nullable=False
        ),
        sa.Column("current_location", sa.String(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "machines",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("type", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column(
            "status", sa.Enum("free", "busy", "broken", name="machinestatus"), server_default="free", nullable=False
        ),
        sa.Column("current_location", sa.String(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "task_types",
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_data",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("employee_id", sa.Integer(), nullable=True),
        sa.Column("rfid_id", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("password_hash", sa.String(), nullable=False),
        sa.Column("last_name", sa.String(), nullable=True),
        sa.Column("first_name", sa.String(), nullable=True),
        sa.Column("middle_name", sa.String(), nullable=True),
        sa.Column("role", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("user_id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("employee_id"),
        sa.UniqueConstraint("password_hash"),
        sa.UniqueConstraint("rfid_id"),
    )
    op.create_table(
        "user_role",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "agregate_suitable_machines",
        sa.Column("agregate_id", sa.Integer(), nullable=False),
        sa.Column("machine_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["agregate_id"],
            ["agregates.id"],
        ),
        sa.ForeignKeyConstraint(
            ["machine_id"],
            ["machines.id"],
        ),
        sa.PrimaryKeyConstraint("agregate_id", "machine_id"),
    )
    op.create_table(
        "email_flows",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("auth_code", sa.String(), nullable=False),
        sa.Column("finished", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user_data.user_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email", "auth_code", name="email_auth_code_unique_constraint"),
    )
    op.create_table(
        "task_suitable_agregates",
        sa.Column("task_type_id", sa.Integer(), nullable=False),
        sa.Column("agregate_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["agregate_id"],
            ["agregates.id"],
        ),
        sa.ForeignKeyConstraint(
            ["task_type_id"],
            ["task_types.id"],
        ),
        sa.PrimaryKeyConstraint("task_type_id", "agregate_id"),
    )
    op.create_table(
        "task_suitable_machines",
        sa.Column("task_type_id", sa.Integer(), nullable=False),
        sa.Column("machine_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["machine_id"],
            ["machines.id"],
        ),
        sa.ForeignKeyConstraint(
            ["task_type_id"],
            ["task_types.id"],
        ),
        sa.PrimaryKeyConstraint("task_type_id", "machine_id"),
    )
    op.create_table(
        "tasks",
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("type_id", sa.Integer(), nullable=False),
        sa.Column("asignee_id", sa.Integer(), nullable=True),
        sa.Column(
            "status",
            sa.Enum("draft", "assigned", "in_progress", "paused", "completed", "canceled", name="taskstatuses"),
            server_default="draft",
            nullable=False,
        ),
        sa.Column("priority", sa.Enum("undefined", "low", "medium", "high", name="taskpriority"), nullable=False),
        sa.Column("location", sa.String(), nullable=False),
        sa.Column("starting", sa.DateTime(), nullable=True),
        sa.Column("deadline", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=True),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=True),
        sa.Column("work_volume", sa.Float(), nullable=True),
        sa.Column("payment_coefficient", sa.Float(), nullable=True),
        sa.Column("fuel_consumption", sa.Float(), nullable=True),
        sa.Column("agregate_depth", sa.Float(), nullable=True),
        sa.Column("agregate_working_speed", sa.Float(), nullable=True),
        sa.Column("agregate_solvent_consumption", sa.Float(), nullable=True),
        sa.Column("current_machine_id", sa.Integer(), nullable=True),
        sa.Column("current_agregate_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["asignee_id"],
            ["user_data.user_id"],
        ),
        sa.ForeignKeyConstraint(
            ["current_agregate_id"],
            ["agregates.id"],
        ),
        sa.ForeignKeyConstraint(
            ["current_machine_id"],
            ["machines.id"],
        ),
        sa.ForeignKeyConstraint(
            ["type_id"],
            ["task_types.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "task_comments",
        sa.Column("task_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("text", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["tasks.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user_data.user_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "task_status_history",
        sa.Column("task_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("timestamp", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["tasks.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user_data.user_id"],
        ),
        sa.PrimaryKeyConstraint("task_id", "user_id", "id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("task_status_history")
    op.drop_table("task_comments")
    op.drop_table("tasks")
    op.drop_table("task_suitable_machines")
    op.drop_table("task_suitable_agregates")
    op.drop_table("email_flows")
    op.drop_table("agregate_suitable_machines")
    op.drop_table("user_role")
    op.drop_table("user_data")
    op.drop_table("task_types")
    op.drop_table("machines")
    op.drop_table("agregates")
    # ### end Alembic commands ###
